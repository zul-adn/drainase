{"version":3,"sources":["logo.svg","store/app/index.js","store/createstore.js","component/RootApp.js","store/app/action.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","datas","filter","openModal","reducer","combineReducers","app","state","action","type","store","createStore","applyMiddleware","thunk","customStyles","content","top","left","right","bottom","marginRight","transform","connect","dispatch","getAllDatas","axios","get","then","response","data","catch","error","console","log","useState","useEffect","MapContainer","className","center","zoom","scrollWheelZoom","style","height","width","zIndex","TileLayer","url","attribution","length","map","i","GeoJSON","kondisi","color","konstruksi","JSON","parse","json","features","Popup","isOpen","onRequestClose","contentLabel","ariaHideApp","App","Store","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAAe,I,oCCATA,EAAe,CACjBC,MAAO,GACPC,OAAQ,GACRC,WAAW,GCETC,EAAUC,YAAgB,CAC5BC,IDAW,WAAmC,IAAlCC,EAAiC,uDAAzBP,EAAcQ,EAAW,uCAC7C,OAAQA,EAAOC,MACX,IAAK,kBACD,kCACOF,GADP,IAEIN,MAAQO,EAAOP,QAEvB,IAAK,eACD,kCACOM,GADP,IAEIN,MAAQO,EAAOP,MACfC,OAASM,EAAON,SAExB,IAAK,eACD,kCACOK,GADP,IAEIJ,WAAYI,EAAMJ,YAE1B,QACI,OAAOI,MCdJG,EAFDC,YAAYP,EAASQ,YAAgBC,M,wFCE7CC,EAAe,CACjBC,QAAS,CACLC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAoHnB,IAaeC,eAbS,SAAC,GAAa,IAAXhB,EAAU,EAAVA,IACvB,MAAO,CACHL,MAAOK,EAAIL,MACXE,UAAWG,EAAIH,cAII,SAAAoB,GACvB,MAAO,CACHC,YAAc,kBAAMD,GCrIjB,SAACA,GACJE,IAAMC,IALC,yDAMNC,MAAK,SAACC,GACHL,EAX+B,CAACd,KAAM,kBAAmBR,MAWlC2B,EAASC,UAEnCC,OAAM,SAACC,GACJC,QAAQC,IAAIF,aDmITT,EA7Hf,YAA6D,IAA1CrB,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,UAAWqB,EAAe,EAAfA,YACzC,EAAiCU,mBAAS/B,GAA1C,mBA+CA,OA/CA,UAEAgC,qBAAU,WACNX,MACD,IA4CC,gCACI,eAACY,EAAA,EAAD,CACIC,UAAU,cACVC,OAAQ,CAAC,QAAU,aACnBC,KAAM,GACNC,iBAAiB,EAEjBC,MACItC,EACI,CAACuC,OAAQ,QAASC,MAAO,QAASC,QAAS,GAE3C,CAACF,OAAQ,QAASC,MAAO,QAASC,OAAQ,GAVtD,UAaI,cAACC,EAAA,EAAD,CACIC,IAAG,yLACHC,YAAY,oQAGE,IAAjB9C,EAAM+C,OACH,GAEA,mCACK/C,EAAMgD,KAAI,SAACpB,EAAMqB,GAAP,OACP,cAACC,EAAA,EAAD,CAEIV,MACe,YAAXvC,GAhEVkD,EAgE8CvB,EAAKuB,QA/DrD,gBAAZA,EACO,CACHC,MAAO,WAEQ,eAAZD,EACA,CACHC,MAAO,WAEQ,SAAZD,EACA,CACHC,MAAO,WAGJ,CACHA,MAAO,aAKMC,EA4C2EzB,EAAKyB,WA3ClF,UAAfA,EACO,CACHD,MAAO,WAEW,aAAfC,EACA,CACHD,MAAO,WAGJ,CACHA,MAAO,YAmCSxB,KAAM0B,KAAKC,MAAM3B,EAAK4B,MAAMC,SALhC,SAOI,cAACC,EAAA,EAAD,KANKT,GA1CT,IAACI,EApBHF,UA4Ed,cAAC,IAAD,CACIQ,OAAQzD,EACR0D,eAAgB1D,EAChBsC,MAAO3B,EACPgD,aAAa,gBACbC,aAAa,UEpGdC,MARf,WACI,OACI,cAAC,IAAD,CAAUtD,MAAOuD,EAAjB,SACI,cAAC,EAAD,OCEGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzC,MAAK,YAAkD,IAA/C0C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.27573894.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const initialState = {\r\n    datas: [],\r\n    filter: '',\r\n    openModal: false\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'STORE_ALL_DATAS':\r\n            return{\r\n                ...state,\r\n                datas : action.datas,\r\n            }\r\n        case 'CHANGE_DATAS':\r\n            return{\r\n                ...state,\r\n                datas : action.datas,\r\n                filter : action.filter\r\n            }\r\n        case 'CHANGE_MODAL':\r\n            return{\r\n                ...state,\r\n                openModal: !state.openModal\r\n            }\r\n        default:\r\n            return state\r\n        \r\n    }\r\n}","import {compose, createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport app from './app';\r\n\r\nconst reducer = combineReducers({\r\n    app,\r\n})\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React, { useState, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON } from 'react-leaflet';\r\nimport { connect } from \"react-redux\";\r\nimport Modal from 'react-modal';\r\n// import Sidebar from './commons/sidebar';\r\nimport {getAllDatas} from './../store/app/action';\r\n// import SidebarBottom from './commons/sidebarbottom';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nconst jsonPath = 'https://dinartech.com/drainase/public/file/';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n\r\nfunction RootApp({ datas, filter, openModal, getAllDatas }) {\r\n    const [modalIsOpen, setIsOpen] = useState(openModal);\r\n\r\n    useEffect(() => {\r\n        getAllDatas()\r\n    }, [])\r\n\r\n\r\n    const getDatas = () => {\r\n        console.log(datas)\r\n    }\r\n\r\n    const styleKondisi = (kondisi) => {\r\n        if (kondisi === \"Sangat Baik\") {\r\n            return {\r\n                color: '#4cd137'\r\n            }\r\n        } else if (kondisi === \"Cukup Baik\") {\r\n            return {\r\n                color: '#0097e6'\r\n            }\r\n        } else if (kondisi === \"Baik\") {\r\n            return {\r\n                color: '#8c7ae6'\r\n            }\r\n        } else {\r\n            return {\r\n                color: '#e84118'\r\n            }\r\n        }\r\n    }\r\n\r\n    const styleKonstruksi = (konstruksi) => {\r\n        if (konstruksi === \"Beton\") {\r\n            return {\r\n                color: '#4cd137'\r\n            }\r\n        } else if (konstruksi === \"Campuran\") {\r\n            return {\r\n                color: '#0097e6'\r\n            }\r\n        } else {\r\n            return {\r\n                color: '#e84118'\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <MapContainer\r\n                className=\"sidebar-map\"\r\n                center={[0.886691, 108.9576699]}\r\n                zoom={11}\r\n                scrollWheelZoom={true}\r\n                // style={{ height: \"100vh\", width: \"100vw\", zIndex: openModal ? -100 : 1}}\r\n                style={\r\n                    openModal ? \r\n                        {height: \"100vh\", width: \"100vw\", zIndex: -1}\r\n                        :\r\n                        {height: \"100vh\", width: \"100vw\", zIndex: 1}\r\n                }\r\n            >\r\n                <TileLayer\r\n                    url={`https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiZGluYXJ0ZWNoIiwiYSI6ImNrcDV0Ym1xaDA3dTIzMW5zaXJsbmViNmwifQ.CuHZsA_wzhmanNCIs5jYEw`}\r\n                    attribution='Map data &copy; <a href=&quot;https://www.openstreetmap.org/&quot;>OpenStreetMap</a> contributors, <a href=&quot;https://creativecommons.org/licenses/by-sa/2.0/&quot;>CC-BY-SA</a>, Imagery &copy; <a href=&quot;https://www.mapbox.com/&quot;>Mapbox</a> - Databse irigasi PUPR Kota Singkawang'\r\n                />\r\n\r\n                {datas.length === 0 ?\r\n                    \"\"\r\n                    :\r\n                    <>\r\n                        {datas.map((data, i) =>\r\n                            <GeoJSON\r\n                                key={i}\r\n                                style={\r\n                                    filter === 'kondisi' ? styleKondisi(data.kondisi) : styleKonstruksi(data.konstruksi)\r\n                                }\r\n                                data={JSON.parse(data.json).features}\r\n                            >\r\n                                <Popup>\r\n                                   \r\n                                </Popup>\r\n                            </GeoJSON>\r\n                        )}\r\n                    </>\r\n                }\r\n            </MapContainer>\r\n            <Modal\r\n                isOpen={openModal}\r\n                onRequestClose={openModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n                ariaHideApp={false}\r\n                // \r\n            >\r\n               \r\n                {/* <h2 ref={(_subtitle) => (subtitle = _subtitle)}>Hello</h2>\r\n                <button onClick={closeModal}>close</button>\r\n                <div>I am a modal</div>\r\n                <form>\r\n                    <input />\r\n                    <button>tab navigation</button>\r\n                    <button>stays</button>\r\n                    <button>inside</button>\r\n                    <button>the modal</button>\r\n                </form> */}\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ app }) => {\r\n    return {\r\n        datas: app.datas,\r\n        openModal: app.openModal\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAllDatas : () => dispatch(getAllDatas())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RootApp);\r\n","import axios from \"axios\"\r\n\r\nexport const storeAllDatas = (payload) => ({type: 'STORE_ALL_DATAS', datas: payload})\r\nexport const storeDatas = (payload, filter) => ({ type : 'CHANGE_DATAS', datas: payload, filter}) \r\nexport const OpenCloseModal = () => ({ type: 'CHANGE_MODAL' })\r\n\r\nconst apiAll = 'https://dinartech.com/drainase/public/api/getpolyline';\r\nconst urlJson = \"https://dinartech.com/drainase/public/file/\";\r\n\r\nexport const getAllDatas = () => {\r\n    return (dispatch) => {\r\n        axios.get(apiAll)\r\n        .then((response) => {\r\n            dispatch(storeAllDatas(response.data))\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n}","import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport Store from './store/createstore';\r\nimport RootApp from './component/RootApp';\r\n\r\nfunction App() {\r\n    return (\r\n        <Provider store={Store}>\r\n            <RootApp />\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}